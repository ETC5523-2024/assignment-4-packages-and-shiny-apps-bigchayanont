% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/reactiveFilter.R
\name{reactiveFilter}
\alias{reactiveFilter}
\title{Filter Data Frame Reactively Based on User Input}
\usage{
reactiveFilter(df, input)
}
\arguments{
\item{df}{A data frame containing at least a \code{year} column to filter on, and a \code{performer} column for optional filtering.}

\item{input}{A list containing reactive inputs from the Shiny app, including:
\itemize{
\item \code{yearRange}: A numeric vector of length 2 representing the start and end years for filtering.
\item \code{performer}: A character vector of performer names to filter by (if specified).
}}
}
\value{
A reactive expression that returns a filtered data frame containing only the rows where:
\itemize{
\item The \code{year} falls within the specified \code{yearRange}, and
\item If the \code{performer} input is not empty, rows where the \code{performer} matches any of the values in the input.
}
}
\description{
This function filters a data frame reactively based on a specified year range and performer input provided by the user. The year range is used to filter rows based on the \code{year} column, and the performer input is used to filter rows where the \code{performer} matches any of the values in the input.
}
\examples{
# Assuming 'data' is a data frame with 'year' and 'performer' columns

\dontrun{
  input$yearRange <- c(2000, 2020)
  input$performer <- c("Taylor Swift", "Ed Sheeran")

  # Filter 'data' based on year range and performers
  filtered_data <- reactiveFilter(data, input)

  # To use within a Shiny app:
  # output$table <- renderTable({
  #   reactiveFilter(data, input)()
  # })
}
}
