[{"path":"https://etc5523-2024.github.io/assignment-4-packages-and-shiny-apps-bigchayanont/articles/billboardAnalysis.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Song Billboard Analysis in the 2010s","text":"package presents analysis songs charted Billboard throughout 2010s. goal understand trends audio features popular songs relationship chart performance using shiny dashboard.","code":""},{"path":"https://etc5523-2024.github.io/assignment-4-packages-and-shiny-apps-bigchayanont/articles/billboardAnalysis.html","id":"data-overview","dir":"Articles","previous_headings":"","what":"Data Overview","title":"Song Billboard Analysis in the 2010s","text":"analysis utilizes two primary datasets: Billboard Dataset: Contains information songs appeared Billboard charts, including song titles, performers, chart positions, weeks chart. Spotify Dataset: Includes detailed audio features songs, energy, acousticness, danceability, speechiness, along popularity scores.","code":""},{"path":"https://etc5523-2024.github.io/assignment-4-packages-and-shiny-apps-bigchayanont/articles/billboardAnalysis.html","id":"key-findings","dir":"Articles","previous_headings":"","what":"Key Findings","title":"Song Billboard Analysis in the 2010s","text":"Trends Audio Features: Significant trends audio features, variations energy danceability, observed across different years. Correlation Popularity: Features like energy danceability show strong correlations song popularity, indicating upbeat energetic tracks tend perform better. Long-Lasting Tracks: Songs remained charts extended periods exhibit distinct patterns, shedding light contributes longevity. Example: Spotify Dataset: Billboard Dataset:","code":"head(audio_features) #> # A tibble: 6 × 22 #>   song_id  performer song  spotify_genre spotify_track_id spotify_track_previe…¹ #>   <chr>    <chr>     <chr> <chr>         <chr>            <chr>                  #> 1 -twisti… Bill Bla… -twi… []            NA               NA                     #> 2 ¿Dònde … Augie Ri… ¿Dòn… ['novelty']   NA               NA                     #> 3 ......A… Andy Wil… ....… ['adult stan… 3tvqPPpXyIgKrm4… https://p.scdn.co/mp3… #> 4 ...And … Sandy Ne… ...A… ['rock-and-r… 1fHHq3qHU8wpRKH… NA                     #> 5 ...Baby… Britney … ...B… ['dance pop'… 3MjUtNVVq3C8Fn0… https://p.scdn.co/mp3… #> 6 ...Read… Taylor S… ...R… ['pop', 'pos… 2yLa0QULdQr0qAI… NA                     #> # ℹ abbreviated name: ¹​spotify_track_preview_url #> # ℹ 16 more variables: spotify_track_duration_ms <dbl>, #> #   spotify_track_explicit <lgl>, spotify_track_album <chr>, #> #   danceability <dbl>, energy <dbl>, key <dbl>, loudness <dbl>, mode <dbl>, #> #   speechiness <dbl>, acousticness <dbl>, instrumentalness <dbl>, #> #   liveness <dbl>, valence <dbl>, tempo <dbl>, time_signature <dbl>, #> #   spotify_track_popularity <dbl> head(billboard) #> # A tibble: 6 × 11 #>   url                  week_id    week_position song  performer song_id instance #>   <chr>                <date>             <dbl> <chr> <chr>     <chr>      <dbl> #> 1 http://www.billboar… 1965-07-17            34 Don'… Patty Du… Don't …        1 #> 2 http://www.billboar… 1965-07-24            22 Don'… Patty Du… Don't …        1 #> 3 http://www.billboar… 1965-07-31            14 Don'… Patty Du… Don't …        1 #> 4 http://www.billboar… 1965-08-07            10 Don'… Patty Du… Don't …        1 #> 5 http://www.billboar… 1965-08-14             8 Don'… Patty Du… Don't …        1 #> 6 http://www.billboar… 1965-08-21             8 Don'… Patty Du… Don't …        1 #> # ℹ 4 more variables: previous_week_position <dbl>, peak_position <dbl>, #> #   weeks_on_chart <dbl>, year <dbl>"},{"path":"https://etc5523-2024.github.io/assignment-4-packages-and-shiny-apps-bigchayanont/articles/billboardAnalysis.html","id":"r-shiny-dashboard","dir":"Articles","previous_headings":"","what":"R shiny dashboard","title":"Song Billboard Analysis in the 2010s","text":"Shiny app, Song Billboard Analysis 2010s, allows users interactively explore Billboard chart data 2010 2019, enriched Spotify audio features. dashboard offers visualizations audio trends time, distribution audio features, comparison features across genres. Key widgets include year range selector, performer filter, feature comparison tools. help mode switch provides descriptions insights plot input field, making user-friendly unfamiliar audio feature analysis. access shiny dashboard details, visit package documentation GitHub page.","code":"run_app()"},{"path":"https://etc5523-2024.github.io/assignment-4-packages-and-shiny-apps-bigchayanont/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Chayanont Piyawatcharvijit. Author, maintainer.","code":""},{"path":"https://etc5523-2024.github.io/assignment-4-packages-and-shiny-apps-bigchayanont/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Piyawatcharvijit C (2024). billboardAnalysis: Song Billboard Analysis 2010s. R package version 0.0.0.9000, https://etc5523-2024.github.io/assignment-4-packages--shiny-apps-bigchayanont/.","code":"@Manual{,   title = {billboardAnalysis: Song Billboard Analysis in the 2010s},   author = {Chayanont Piyawatcharvijit},   year = {2024},   note = {R package version 0.0.0.9000},   url = {https://etc5523-2024.github.io/assignment-4-packages-and-shiny-apps-bigchayanont/}, }"},{"path":"https://etc5523-2024.github.io/assignment-4-packages-and-shiny-apps-bigchayanont/index.html","id":"billboardanalysis","dir":"","previous_headings":"","what":"Song Billboard Analysis in the 2010s","title":"Song Billboard Analysis in the 2010s","text":"goal R package create interactive Shiny dashboard lets users explore Billboard Spotify data 2010s, focusing trends audio features like energy, acousticness, danceability.","code":""},{"path":"https://etc5523-2024.github.io/assignment-4-packages-and-shiny-apps-bigchayanont/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Song Billboard Analysis in the 2010s","text":"can install development version billboardAnalysis :","code":"# install.packages(\"devtools\") devtools::install_github(\"ETC5523-2024/assignment-4-packages-and-shiny-apps-bigchayanont\")"},{"path":"https://etc5523-2024.github.io/assignment-4-packages-and-shiny-apps-bigchayanont/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Song Billboard Analysis in the 2010s","text":"access dataset. Billboard Dataset: Song features Spotify Dataset: combination billboard spotify dataset long format: access shiny dashboard","code":"library(billboardAnalysis) ## basic example code head(audio_features) #> # A tibble: 6 × 22 #>   song_id  performer song  spotify_genre spotify_track_id spotify_track_previe…¹ #>   <chr>    <chr>     <chr> <chr>         <chr>            <chr>                  #> 1 -twisti… Bill Bla… -twi… []            <NA>             <NA>                   #> 2 ¿Dònde … Augie Ri… ¿Dòn… ['novelty']   <NA>             <NA>                   #> 3 ......A… Andy Wil… ....… ['adult stan… 3tvqPPpXyIgKrm4… https://p.scdn.co/mp3… #> 4 ...And … Sandy Ne… ...A… ['rock-and-r… 1fHHq3qHU8wpRKH… <NA>                   #> 5 ...Baby… Britney … ...B… ['dance pop'… 3MjUtNVVq3C8Fn0… https://p.scdn.co/mp3… #> 6 ...Read… Taylor S… ...R… ['pop', 'pos… 2yLa0QULdQr0qAI… <NA>                   #> # ℹ abbreviated name: ¹​spotify_track_preview_url #> # ℹ 16 more variables: spotify_track_duration_ms <dbl>, #> #   spotify_track_explicit <lgl>, spotify_track_album <chr>, #> #   danceability <dbl>, energy <dbl>, key <dbl>, loudness <dbl>, mode <dbl>, #> #   speechiness <dbl>, acousticness <dbl>, instrumentalness <dbl>, #> #   liveness <dbl>, valence <dbl>, tempo <dbl>, time_signature <dbl>, #> #   spotify_track_popularity <dbl> head(billboard) #> # A tibble: 6 × 11 #>   url                  week_id    week_position song  performer song_id instance #>   <chr>                <date>             <dbl> <chr> <chr>     <chr>      <dbl> #> 1 http://www.billboar… 1965-07-17            34 Don'… Patty Du… Don't …        1 #> 2 http://www.billboar… 1965-07-24            22 Don'… Patty Du… Don't …        1 #> 3 http://www.billboar… 1965-07-31            14 Don'… Patty Du… Don't …        1 #> 4 http://www.billboar… 1965-08-07            10 Don'… Patty Du… Don't …        1 #> 5 http://www.billboar… 1965-08-14             8 Don'… Patty Du… Don't …        1 #> 6 http://www.billboar… 1965-08-21             8 Don'… Patty Du… Don't …        1 #> # ℹ 4 more variables: previous_week_position <dbl>, peak_position <dbl>, #> #   weeks_on_chart <dbl>, year <dbl> head(feature_long) #> # A tibble: 6 × 20 #>   url             week_id    week_position song_id instance weeks_on_chart  year #>   <chr>           <date>             <dbl> <chr>      <dbl>          <dbl> <dbl> #> 1 http://www.bil… 2010-06-26            67 Beauti…        1              1  2010 #> 2 http://www.bil… 2010-06-26            67 Beauti…        1              1  2010 #> 3 http://www.bil… 2010-06-26            67 Beauti…        1              1  2010 #> 4 http://www.bil… 2010-06-26            67 Beauti…        1              1  2010 #> 5 http://www.bil… 2010-06-26            67 Beauti…        1              1  2010 #> 6 http://www.bil… 2010-06-26            67 Beauti…        1              1  2010 #> # ℹ 13 more variables: spotify_genre <chr>, spotify_track_id <chr>, #> #   spotify_track_preview_url <chr>, spotify_track_duration_ms <dbl>, #> #   spotify_track_explicit <lgl>, spotify_track_album <chr>, tempo <dbl>, #> #   time_signature <dbl>, spotify_track_popularity <dbl>, song <chr>, #> #   performer <chr>, features <chr>, value <dbl> run_app()"},{"path":"https://etc5523-2024.github.io/assignment-4-packages-and-shiny-apps-bigchayanont/reference/audio_features.html","id":null,"dir":"Reference","previous_headings":"","what":"Spotify Audio Features Dataset — audio_features","title":"Spotify Audio Features Dataset — audio_features","text":"dataset contains audio features various songs sourced Spotify, including metadata audio characteristics. represents unique song entries, total 29,386 rows 22 columns.","code":""},{"path":"https://etc5523-2024.github.io/assignment-4-packages-and-shiny-apps-bigchayanont/reference/audio_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spotify Audio Features Dataset — audio_features","text":"","code":"data(audio_features)"},{"path":"https://etc5523-2024.github.io/assignment-4-packages-and-shiny-apps-bigchayanont/reference/audio_features.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Spotify Audio Features Dataset — audio_features","text":"data frame 29,386 rows 22 variables: song_id Unique identifier song. performer Name artist group performing song. song Title song. spotify_genre Genre(s) song, represented list (may include multiple genres). spotify_track_id Unique identifier track Spotify's database. spotify_track_preview_url URL preview track. spotify_track_duration_ms Duration track milliseconds. spotify_track_explicit Logical; Indicates track contains explicit content (TRUE FALSE, may NA). spotify_track_album Title album includes track. danceability Measure suitable track dancing, scale 0.0 1.0. energy Measure intensity activity, scale 0.0 1.0. key Key track, represented integer. loudness Overall loudness track decibels. mode Modality track, 1 indicating major 0 indicating minor. speechiness Measure presence spoken words track, scale 0.0 1.0. acousticness Measure acoustic nature track, scale 0.0 1.0. instrumentalness Measure whether track contains vocals, scale 0.0 1.0. liveness Measure presence audience recording, scale 0.0 1.0. valence Measure musical positiveness happiness, scale 0.0 1.0. tempo Tempo track beats per minute. time_signature Time signature track, represented integer. spotify_track_popularity Popularity track scale 0 100, 100 popular.","code":""},{"path":"https://etc5523-2024.github.io/assignment-4-packages-and-shiny-apps-bigchayanont/reference/audio_features.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Spotify Audio Features Dataset — audio_features","text":"Data sourced TidyTuesday project Spotify's Web API.","code":""},{"path":"https://etc5523-2024.github.io/assignment-4-packages-and-shiny-apps-bigchayanont/reference/audio_features.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Spotify Audio Features Dataset — audio_features","text":"dataset cleaned retain one row per song (song_id), first occurrence song selected.","code":""},{"path":"https://etc5523-2024.github.io/assignment-4-packages-and-shiny-apps-bigchayanont/reference/audio_features.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Spotify Audio Features Dataset — audio_features","text":"","code":"data(audio_features) head(audio_features) #> # A tibble: 6 × 22 #>   song_id  performer song  spotify_genre spotify_track_id spotify_track_previe…¹ #>   <chr>    <chr>     <chr> <chr>         <chr>            <chr>                  #> 1 -twisti… Bill Bla… -twi… []            NA               NA                     #> 2 ¿Dònde … Augie Ri… ¿Dòn… ['novelty']   NA               NA                     #> 3 ......A… Andy Wil… ....… ['adult stan… 3tvqPPpXyIgKrm4… https://p.scdn.co/mp3… #> 4 ...And … Sandy Ne… ...A… ['rock-and-r… 1fHHq3qHU8wpRKH… NA                     #> 5 ...Baby… Britney … ...B… ['dance pop'… 3MjUtNVVq3C8Fn0… https://p.scdn.co/mp3… #> 6 ...Read… Taylor S… ...R… ['pop', 'pos… 2yLa0QULdQr0qAI… NA                     #> # ℹ abbreviated name: ¹​spotify_track_preview_url #> # ℹ 16 more variables: spotify_track_duration_ms <dbl>, #> #   spotify_track_explicit <lgl>, spotify_track_album <chr>, #> #   danceability <dbl>, energy <dbl>, key <dbl>, loudness <dbl>, mode <dbl>, #> #   speechiness <dbl>, acousticness <dbl>, instrumentalness <dbl>, #> #   liveness <dbl>, valence <dbl>, tempo <dbl>, time_signature <dbl>, #> #   spotify_track_popularity <dbl>"},{"path":"https://etc5523-2024.github.io/assignment-4-packages-and-shiny-apps-bigchayanont/reference/billboard.html","id":null,"dir":"Reference","previous_headings":"","what":"Billboard Dataset — billboard","title":"Billboard Dataset — billboard","text":"dataset contains information Billboard Hot 100 chart rankings time. data sourced TidyTuesday project.","code":""},{"path":"https://etc5523-2024.github.io/assignment-4-packages-and-shiny-apps-bigchayanont/reference/billboard.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Billboard Dataset — billboard","text":"","code":"data(billboard)"},{"path":"https://etc5523-2024.github.io/assignment-4-packages-and-shiny-apps-bigchayanont/reference/billboard.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Billboard Dataset — billboard","text":"data frame 327,895 rows 11 variables: url URL Billboard chart entry song week_id date chart week week_position song's position chart week song Title song performer Name artist group performing song song_id Unique identifier song instance instance number song's entry chart previous_week_position song's position chart previous week peak_position highest position reached song chart weeks_on_chart total number weeks song chart year year song chart","code":""},{"path":"https://etc5523-2024.github.io/assignment-4-packages-and-shiny-apps-bigchayanont/reference/billboard.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Billboard Dataset — billboard","text":"TidyTuesday Billboard Dataset","code":""},{"path":"https://etc5523-2024.github.io/assignment-4-packages-and-shiny-apps-bigchayanont/reference/billboard.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Billboard Dataset — billboard","text":"dataset processed convert week_id date format extract year week_id.","code":""},{"path":"https://etc5523-2024.github.io/assignment-4-packages-and-shiny-apps-bigchayanont/reference/billboard.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Billboard Dataset — billboard","text":"","code":"data(billboard) head(billboard) #> # A tibble: 6 × 11 #>   url                  week_id    week_position song  performer song_id instance #>   <chr>                <date>             <dbl> <chr> <chr>     <chr>      <dbl> #> 1 http://www.billboar… 1965-07-17            34 Don'… Patty Du… Don't …        1 #> 2 http://www.billboar… 1965-07-24            22 Don'… Patty Du… Don't …        1 #> 3 http://www.billboar… 1965-07-31            14 Don'… Patty Du… Don't …        1 #> 4 http://www.billboar… 1965-08-07            10 Don'… Patty Du… Don't …        1 #> 5 http://www.billboar… 1965-08-14             8 Don'… Patty Du… Don't …        1 #> 6 http://www.billboar… 1965-08-21             8 Don'… Patty Du… Don't …        1 #> # ℹ 4 more variables: previous_week_position <dbl>, peak_position <dbl>, #> #   weeks_on_chart <dbl>, year <dbl>"},{"path":"https://etc5523-2024.github.io/assignment-4-packages-and-shiny-apps-bigchayanont/reference/billboardAnalysis-package.html","id":null,"dir":"Reference","previous_headings":"","what":"billboardAnalysis: Song Billboard Analysis in the 2010s — billboardAnalysis-package","title":"billboardAnalysis: Song Billboard Analysis in the 2010s — billboardAnalysis-package","text":"R packages integrates Billboard chart data Spotify audio features interactive Shiny dashboard. dashboard allows users explore song trends 2010s, focusing audio characteristics like energy, acousticness, danceability, speechiness. features interactive plots, including year-wise trends audio features, feature distributions long-lasting tracks, comparisons features across genres. dashboard designed provide insights evolution music features time, user-friendly interface help mode navigating features.","code":""},{"path":[]},{"path":"https://etc5523-2024.github.io/assignment-4-packages-and-shiny-apps-bigchayanont/reference/billboardAnalysis-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"billboardAnalysis: Song Billboard Analysis in the 2010s — billboardAnalysis-package","text":"Maintainer: Chayanont Piyawatcharvijit big.chayanont@gmail.com","code":""},{"path":"https://etc5523-2024.github.io/assignment-4-packages-and-shiny-apps-bigchayanont/reference/feature_long.html","id":null,"dir":"Reference","previous_headings":"","what":"Feature Long Dataset — feature_long","title":"Feature Long Dataset — feature_long","text":"dataset combines Billboard chart data audio features songs chart 2010 2019. data sourced Billboard charts audio features dataset, entries merged based song_id.","code":""},{"path":"https://etc5523-2024.github.io/assignment-4-packages-and-shiny-apps-bigchayanont/reference/feature_long.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Feature Long Dataset — feature_long","text":"","code":"data(feature_long)"},{"path":"https://etc5523-2024.github.io/assignment-4-packages-and-shiny-apps-bigchayanont/reference/feature_long.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Feature Long Dataset — feature_long","text":"data frame 522,000 rows 20 variables: url URL Billboard chart given week. week_id date Billboard chart given week. week_position position song Billboard chart given week. song_id unique identifier song, composed song name performer. instance number times song appeared chart. weeks_on_chart total number weeks song spent chart. year year song Billboard chart. spotify_genre list genres associated song Spotify. spotify_track_id Spotify ID track. spotify_track_preview_url URL preview track Spotify. spotify_track_duration_ms duration track milliseconds. spotify_track_explicit Indicates track contains explicit content (TRUE FALSE). spotify_track_album name album track appears . tempo tempo track beats per minute (BPM). time_signature time signature track (typically 4 popular music). spotify_track_popularity popularity score track Spotify (0-100). song title song. performer performer song. features Audio features extracted song (e.g., danceability, energy, loudness). value corresponding values audio features.","code":""},{"path":"https://etc5523-2024.github.io/assignment-4-packages-and-shiny-apps-bigchayanont/reference/feature_long.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Feature Long Dataset — feature_long","text":"Billboard charts audio features dataset","code":""},{"path":"https://etc5523-2024.github.io/assignment-4-packages-and-shiny-apps-bigchayanont/reference/feature_long.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Feature Long Dataset — feature_long","text":"dataset includes distinct entries song, audio features transformed long format analysis.","code":""},{"path":"https://etc5523-2024.github.io/assignment-4-packages-and-shiny-apps-bigchayanont/reference/feature_long.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Feature Long Dataset — feature_long","text":"","code":"data(feature_long) head(feature_long) #> # A tibble: 6 × 20 #>   url             week_id    week_position song_id instance weeks_on_chart  year #>   <chr>           <date>             <dbl> <chr>      <dbl>          <dbl> <dbl> #> 1 http://www.bil… 2010-06-26            67 Beauti…        1              1  2010 #> 2 http://www.bil… 2010-06-26            67 Beauti…        1              1  2010 #> 3 http://www.bil… 2010-06-26            67 Beauti…        1              1  2010 #> 4 http://www.bil… 2010-06-26            67 Beauti…        1              1  2010 #> 5 http://www.bil… 2010-06-26            67 Beauti…        1              1  2010 #> 6 http://www.bil… 2010-06-26            67 Beauti…        1              1  2010 #> # ℹ 13 more variables: spotify_genre <chr>, spotify_track_id <chr>, #> #   spotify_track_preview_url <chr>, spotify_track_duration_ms <dbl>, #> #   spotify_track_explicit <lgl>, spotify_track_album <chr>, tempo <dbl>, #> #   time_signature <dbl>, spotify_track_popularity <dbl>, song <chr>, #> #   performer <chr>, features <chr>, value <dbl>"},{"path":"https://etc5523-2024.github.io/assignment-4-packages-and-shiny-apps-bigchayanont/reference/reactiveFilter.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter Data Frame Reactively Based on User Input — reactiveFilter","title":"Filter Data Frame Reactively Based on User Input — reactiveFilter","text":"function filters data frame reactively based specified year range performer input provided user. year range used filter rows based year column, performer input used filter rows performer matches values input.","code":""},{"path":"https://etc5523-2024.github.io/assignment-4-packages-and-shiny-apps-bigchayanont/reference/reactiveFilter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter Data Frame Reactively Based on User Input — reactiveFilter","text":"","code":"reactiveFilter(df, input)"},{"path":"https://etc5523-2024.github.io/assignment-4-packages-and-shiny-apps-bigchayanont/reference/reactiveFilter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter Data Frame Reactively Based on User Input — reactiveFilter","text":"df data frame containing least year column filter , performer column optional filtering. input list containing reactive inputs Shiny app, including: yearRange: numeric vector length 2 representing start end years filtering. performer: character vector performer names filter (specified).","code":""},{"path":"https://etc5523-2024.github.io/assignment-4-packages-and-shiny-apps-bigchayanont/reference/reactiveFilter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter Data Frame Reactively Based on User Input — reactiveFilter","text":"reactive expression returns filtered data frame containing rows : year falls within specified yearRange, performer input empty, rows performer matches values input.","code":""},{"path":"https://etc5523-2024.github.io/assignment-4-packages-and-shiny-apps-bigchayanont/reference/reactiveFilter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter Data Frame Reactively Based on User Input — reactiveFilter","text":"","code":"# Assuming 'data' is a data frame with 'year' and 'performer' columns  if (FALSE) { # \\dontrun{   input$yearRange <- c(2000, 2020)   input$performer <- c(\"Taylor Swift\", \"Ed Sheeran\")    # Filter 'data' based on year range and performers   filtered_data <- reactiveFilter(data, input)    # To use within a Shiny app:   # output$table <- renderTable({   #   reactiveFilter(data, input)()   # }) } # }"},{"path":"https://etc5523-2024.github.io/assignment-4-packages-and-shiny-apps-bigchayanont/reference/run_app.html","id":null,"dir":"Reference","previous_headings":"","what":"Launch Billboard Analysis Shiny App — run_app","title":"Launch Billboard Analysis Shiny App — run_app","text":"function launches Shiny application designed provide interactive visualizations analysis Billboard Spotify data. Users can explore audio features, chart trends, insights related popular music.","code":""},{"path":"https://etc5523-2024.github.io/assignment-4-packages-and-shiny-apps-bigchayanont/reference/run_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Launch Billboard Analysis Shiny App — run_app","text":"","code":"run_app()"},{"path":"https://etc5523-2024.github.io/assignment-4-packages-and-shiny-apps-bigchayanont/reference/run_app.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Launch Billboard Analysis Shiny App — run_app","text":"Nothing","code":""},{"path":"https://etc5523-2024.github.io/assignment-4-packages-and-shiny-apps-bigchayanont/reference/run_app.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Launch Billboard Analysis Shiny App — run_app","text":"","code":"if (FALSE) { # \\dontrun{ run_app() } # }"}]
